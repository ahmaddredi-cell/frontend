"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/events/new/page",{

/***/ "(app-pages-browser)/./lib/api/events-service.ts":
/*!***********************************!*\
  !*** ./lib/api/events-service.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventsService: function() { return /* binding */ eventsService; }\n/* harmony export */ });\n/* harmony import */ var _api_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-client */ \"(app-pages-browser)/./lib/api/api-client.ts\");\n\nclass EventsService {\n    /**\r\n   * Get all events with optional filtering\r\n   */ async getEvents(filters) {\n        // Convert filters to query string\n        const queryParams = new URLSearchParams();\n        if (filters) {\n            Object.entries(filters).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null && value !== \"\") {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const queryString = queryParams.toString() ? \"?\".concat(queryParams.toString()) : \"\";\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/events\".concat(queryString));\n    }\n    /**\r\n   * Get a single event by ID\r\n   */ async getEventById(id) {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/events/\".concat(id));\n    }\n    /**\r\n   * Create a new event\r\n   */ async createEvent(eventData) {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/events\", eventData);\n    }\n    /**\r\n   * Update an existing event\r\n   */ async updateEvent(eventData) {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.put(\"/events/\".concat(eventData.id), eventData);\n    }\n    /**\r\n   * Delete an event\r\n   */ async deleteEvent(id) {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.delete(\"/events/\".concat(id));\n    }\n    /**\r\n   * Change event status\r\n   */ async changeEventStatus(id, status) {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.patch(\"/events/\".concat(id, \"/status\"), {\n            status\n        });\n    }\n    /**\r\n   * Get event statistics\r\n   */ async getEventStatistics(startDate, endDate) {\n        const queryParams = new URLSearchParams();\n        if (startDate) queryParams.append(\"startDate\", startDate);\n        if (endDate) queryParams.append(\"endDate\", endDate);\n        const queryString = queryParams.toString() ? \"?\".concat(queryParams.toString()) : \"\";\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/events/statistics\".concat(queryString));\n    }\n    /**\r\n   * Get all events for today\r\n   */ async getTodayEvents() {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/events/today\");\n    }\n    /**\r\n   * Get critical events\r\n   */ async getCriticalEvents() {\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/events/critical\");\n    }\n    /**\r\n   * Upload an attachment for an event\r\n   */ async uploadEventAttachment(eventId, file) {\n        const formData = new FormData();\n        formData.append(\"attachment\", file); // Changed from 'file' to 'attachment' to match backend expectation\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.uploadFile(\"/events/\".concat(eventId, \"/attachments\"), formData);\n    }\n    /**\r\n   * Export events to Excel\r\n   */ async exportToExcel(filters) {\n        // Convert filters to query string\n        const queryParams = new URLSearchParams();\n        if (filters) {\n            Object.entries(filters).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null && value !== \"\") {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const queryString = queryParams.toString() ? \"?\".concat(queryParams.toString()) : \"\";\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/events/export/excel\".concat(queryString));\n    }\n}\n// Create and export a singleton instance\nconst eventsService = new EventsService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/events-service.ts\n"));

/***/ })

});